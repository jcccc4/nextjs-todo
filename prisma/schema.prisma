generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_PRISMA_URL")
  directUrl = env("POSTGRES_URL_NON_POOLING")
}

model Account {
  id                String  @id @default(cuid())
  userId            Int
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       Int
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model User {
  id            Int       @id @default(autoincrement())
  name          String?
  email         String    @unique
  emailVerified DateTime?
  image         String?
  username      String?   @unique
  password      String?
  createdAt     DateTime  @default(now())
  accounts      Account[]
  Board         Board[]
  Post          Post[]
  sessions      Session[]
}

model Board {
  id        Int    @id @default(autoincrement())
  boardName String @unique
  email     String
  author    User   @relation(fields: [email], references: [email])
  Post      Post[]
}

model Post {
  id        String     @unique
  content   String?
  email     String
  author    User    @relation(fields: [email], references: [email])
  boardName String
  board     Board   @relation(fields: [boardName], references: [boardName])
}
