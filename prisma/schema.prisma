generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_PRISMA_URL")
  directUrl = env("POSTGRES_URL_NON_POOLING")
}

model Account {
  id                String  @id @default(cuid())
  userId            Int
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       Int
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model User {
  id            Int         @id @default(autoincrement())
  name          String?
  email         String      @unique
  emailVerified DateTime?
  image         String?
  username      String?     @unique
  password      String?
  createdAt     DateTime    @default(now())
  accounts      Account[]
  TaskBoard     TaskBoard[]
  Habit         Habit[]
  sessions      Session[]
}

model TaskBoard {
  id        String @unique
  boardName String @unique
  email     String
  author    User   @relation(fields: [email], references: [email])
}

model Habit {
  id     String @unique
  title  String
  email  String
  author User   @relation(fields: [email], references: [email])
  frequency       HabitFrequency
  order           Int
  WeeklyFrequency WeeklyFrequency?
}

enum HabitFrequency {
  DAILY
  WEEKLY
}

model WeeklyFrequency {
  id        String  @unique
  habitId   String  @unique
  habit     Habit   @relation(fields: [habitId], references: [id])
  monday    Boolean
  tuesday   Boolean
  wednesday Boolean
  thursday  Boolean
  friday    Boolean
  saturday  Boolean
  sunday    Boolean
}
